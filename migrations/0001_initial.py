# Generated by Django 3.1 on 2020-10-23 15:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mighty.applications.twofactor.models
import mighty.applications.user.manager
import mighty.functions
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('easyshares', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('image', models.ImageField(blank=True, null=True, upload_to=mighty.functions.image_directory_path)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=254, null=True, unique=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='Phone')),
                ('method', models.CharField(choices=[('CREATESUPERUSER', 'Manage.py createsuperuser'), ('BACKEND', 'Backend (/admin)'), ('FRONTEND', 'Workflow allowed by your website'), ('IMPORT', 'By import')], default='FRONTEND', max_length=15, verbose_name='Creation method')),
                ('method_backend', models.CharField(blank=True, max_length=255, null=True, verbose_name='Creation method')),
                ('gender', models.CharField(blank=True, choices=[('M', 'man'), ('W', 'woman')], max_length=1, null=True, verbose_name='Genre')),
                ('style', models.CharField(default='dark', max_length=255)),
                ('channel', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'auth_user',
                'ordering': ['last_name', 'first_name', 'email'],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
            managers=[
                ('objects', mighty.applications.user.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('channel_name', models.CharField(blank=True, max_length=255, null=True)),
                ('channel_type', models.CharField(max_length=255)),
                ('from_id', models.CharField(max_length=40)),
                ('objs', models.JSONField(default=dict)),
                ('history', models.JSONField(default=dict)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='ConfigClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('url_name', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('config', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('key_type', models.CharField(choices=[('BIGINTEGER', 'It is a 64-bit integer, much like an IntegerField except that it is guaranteed to fit numbers from -9223372036854775808 to 9223372036854775807.'), ('BINARY', 'A field to store raw binary data.'), ('BOOLEAN', 'A true/false field.'), ('CHAR', 'It is a date, represented in Python by a datetime.date instance.'), ('DATE', 'A date, represented in Python by a datetime.date instance'), ('DECIMAL', 'It is a fixed-precision decimal number, represented in Python by a Decimal instance.'), ('DURATION', 'A field for storing periods of time.'), ('EMAIL', 'It is a CharField that checks that the value is a valid email address.'), ('FILE', 'It is a file-upload field.'), ('FLOAT', 'It is a floating-point number represented in Python by a float instance.'), ('IMAGE', 'It inherits all attributes and methods from FileField, but also validates that the uploaded object is a valid image.'), ('INTEGER', 'It is an integer field. Values from -2147483648 to 2147483647 are safe in all databases supported by Django.'), ('SMALLINTEGER', 'It is like an IntegerField, but only allows values under a certain (database-dependent) point.'), ('TEXT', 'A large text field. The default form widget for this field is a Textarea.'), ('TIME', 'A time, represented in Python by a datetime.time instance.'), ('URL', 'A CharField for a URL, validated by URLValidator.')], default='CHAR', max_length=20, verbose_name='key type')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Key',
                'verbose_name_plural': 'keys',
                'ordering': ['name', 'key_type', '-date_create'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Missive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('mode', models.CharField(choices=[('EMAIL', 'email'), ('SMS', 'sms'), ('POSTAL', 'postal')], default='EMAIL', max_length=6)),
                ('status', models.CharField(choices=[('PREPARE', 'prepare'), ('SENT', 'sent'), ('RECEIVED', 'received'), ('ERROR', 'error')], default='PREPARE', max_length=8)),
                ('target', models.CharField(max_length=255)),
                ('backend', models.CharField(editable=False, max_length=255)),
                ('response', models.TextField(editable=False)),
                ('subject', models.CharField(max_length=255)),
                ('html', models.TextField()),
                ('txt', models.TextField()),
            ],
            options={
                'ordering': ['-date_create'],
                'permissions': [('can_check', 'Check status')],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='Nationality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('image', models.ImageField(blank=True, null=True, upload_to=mighty.functions.image_directory_path)),
                ('country', models.CharField(max_length=255, verbose_name='country')),
                ('alpha2', models.CharField(max_length=2, verbose_name='alpha2')),
                ('alpha3', models.CharField(blank=True, max_length=3, null=True, verbose_name='alpha3')),
                ('numeric', models.CharField(blank=True, max_length=3, null=True, verbose_name='numeric')),
                ('numbering', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='numbering')),
            ],
            options={
                'verbose_name': 'nationality',
                'verbose_name_plural': 'nationalities',
                'ordering': ['country'],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='Translator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='UserChangeLogModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(db_index=True, max_length=255, verbose_name='field')),
                ('value', models.BinaryField(verbose_name='value')),
                ('fmodel', models.CharField(max_length=255, verbose_name='field type')),
                ('date_begin', models.DateTimeField(editable=False, verbose_name='begin')),
                ('date_end', models.DateTimeField(auto_now_add=True, verbose_name='end')),
                ('user', models.CharField(blank=True, default='anonymous~root', max_length=255, null=True)),
                ('object_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_changelog', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('useragent', models.CharField(editable=False, max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_useragent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('default', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='address')),
                ('locality', models.CharField(blank=True, max_length=255, null=True, verbose_name='locality')),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='postal code')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='state')),
                ('state_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='state code')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='country')),
                ('country_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='country code')),
                ('cedex', models.CharField(blank=True, max_length=255, null=True, verbose_name='cedex')),
                ('cedex_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='cedex code')),
                ('special', models.CharField(blank=True, max_length=255, null=True)),
                ('complement', models.CharField(blank=True, max_length=255, null=True)),
                ('index', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='UserAccessLogModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(db_index=True, max_length=255, verbose_name='field')),
                ('value', models.BinaryField(verbose_name='value')),
                ('fmodel', models.CharField(max_length=255, verbose_name='field type')),
                ('date_begin', models.DateTimeField(editable=False, verbose_name='begin')),
                ('date_end', models.DateTimeField(auto_now_add=True, verbose_name='end')),
                ('user', models.CharField(blank=True, default='anonymous~root', max_length=255, null=True)),
                ('object_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_accesslog', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Twofactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('email_or_phone', models.CharField(max_length=255)),
                ('code', models.PositiveIntegerField(db_index=True, default=mighty.applications.twofactor.models.generate_code)),
                ('is_consumed', models.BooleanField(default=False)),
                ('mode', models.CharField(choices=[('EMAIL', 'email'), ('SMS', 'sms'), ('POSTAL', 'postal')], max_length=255)),
                ('backend', models.CharField(editable=False, max_length=255)),
                ('missive', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='twofactor_missive', to='mighty.missive')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='twofactor_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_create'],
                'permissions': [('can_check', 'Check status')],
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='TranslateDict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('precision', models.CharField(max_length=5)),
                ('translates', models.JSONField(blank=True, null=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mighty.nationality')),
                ('translator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translator_dict', to='mighty.translator')),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Phone')),
                ('default', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_phone', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('args', models.CharField(blank=True, max_length=255, null=True, verbose_name='The tuple of arguments merged into msg to produce message, or a dict whose values are used for the merge (when there is only one argument, and it is a dictionary).')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Time when the LogRecord was created (as returned by time.time()).')),
                ('exc_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Exception tuple (à la sys.exc_info) or, if no exception has occurred, None.')),
                ('filename', models.CharField(blank=True, max_length=255, null=True, verbose_name='Filename portion of pathname.')),
                ('funcName', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of function containing the logging call.')),
                ('levelno', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Numeric logging level for the message (DEBUG, INFO, WARNING, ERROR, CRITICAL).')),
                ('lineno', models.CharField(blank=True, max_length=255, null=True, verbose_name='Source line number where the logging call was issued (if available).')),
                ('module', models.CharField(blank=True, max_length=255, null=True, verbose_name='Module (name portion of filename).')),
                ('msecs', models.CharField(blank=True, max_length=255, null=True, verbose_name='Millisecond portion of the time when the LogRecord was created.')),
                ('msg', models.CharField(blank=True, max_length=255, null=True, verbose_name="The format string passed in the original logging call. Merged with args to produce message, or an arbitrary object (see Utilisation d'objets arbitraires comme messages).")),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of the logger used to log the call.')),
                ('pathname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full pathname of the source file where the logging call was issued (if available).')),
                ('process', models.CharField(blank=True, max_length=255, null=True, verbose_name='Process ID (if available).')),
                ('processName', models.CharField(blank=True, max_length=255, null=True, verbose_name='Process name (if available).')),
                ('relativeCreated', models.CharField(blank=True, max_length=255, null=True, verbose_name='Time in milliseconds when the LogRecord was created, relative to the time the logging module was loaded.')),
                ('stack_info', models.TextField(blank=True, max_length=255, null=True, verbose_name='Stack frame information (where available) from the bottom of the stack in the current thread, up to and including the stack frame of the logging call which resulted in the creation of this record.')),
                ('thread', models.CharField(blank=True, max_length=255, null=True, verbose_name='Thread ID (if available).')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'log',
                'verbose_name_plural': 'logs',
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='Phone')),
                ('status', models.CharField(choices=[('NOTSEND', 'not send'), ('PENDING', 'pending'), ('REFUSED', 'refused'), ('ACCEPTED', 'accepted'), ('EXPIRED', 'expired')], default='PENDING', max_length=8)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userorinvitation_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='InternetProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_ip', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('logfields', models.JSONField(blank=True, default=dict, null=True)),
                ('is_disable', models.BooleanField(default=False, editable=False, verbose_name='Is disable')),
                ('search', models.TextField(blank=True, db_index=True, null=True)),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('create_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Created by')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('update_by', models.CharField(blank=True, editable=False, max_length=254, null=True, verbose_name='Updated by')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('default', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_email', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'anticipate', 'disable', 'enable', 'export', 'filterlvl0', 'filterlvl1', 'filterlvl2', 'import', 'list', 'source'),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='nationalities',
            field=models.ManyToManyField(blank=True, to='mighty.Nationality'),
        ),
        migrations.AddField(
            model_name='user',
            name='optional',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='optional_user', to='easyshares.dataroomfolder'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
